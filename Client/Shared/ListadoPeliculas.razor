@if (Peliculas is null)
{
    <p>Cargando las peliculas</p>
    <img src="https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif?20151024034921" />
}
else if (Peliculas.Count == 0)
{
    <p>No hay peliculas</p>
}
else
{
    @foreach (var pelicula in Peliculas)
    {
        @if (pelicula.costo_pelicula > 200)
        {
            <span style="color: red;"><b>Esta muy cara</b></span>
        }
        <div>
            <p>El titulo de la pelicula es: @pelicula.Titulo</p>
            <p>La fecha de lanzamiento es: @pelicula.Fecha_de_lanzamiento.ToString("dd MMM yyyy")</p>

            <p>El costo de la pelicula es: @pelicula.costo_pelicula</p>
        </div>
    }
}
@code {

    public List<BlazorPeliculas>? Peliculas { get; set; }
    //Method para ejecutar funcion inmediata cuando inicialize-cargue el componente en el navegador, ejemplo: cuando cargue el componente podemos dar un mensaje de espera para despues mostrar el contenido
    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(3000);
        Peliculas = obtenerPeliculas();
        //Peliculas = new List<BlazorPeliculas>();
    }
    //LISTADO DE VARIAS PELICULAS USANDO LAS MISMAS PROPIEDADES DE SU CLASE
    List<BlazorPeliculas> obtenerPeliculas()
    {
        return new List<BlazorPeliculas>()
{
            new BlazorPeliculas{ Titulo = "Spider No Way Home", costo_pelicula = 200, Fecha_de_lanzamiento = new DateTime(2020,11,28)},
            new BlazorPeliculas{ Titulo = "American Me", costo_pelicula = 20, Fecha_de_lanzamiento = new DateTime(2020,11,29)},
            new BlazorPeliculas{ Titulo = "Sangre por Sangre", costo_pelicula = 2600, Fecha_de_lanzamiento = new DateTime(2020,11,27)},
        };
    }
}

