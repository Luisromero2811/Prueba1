@page "/peliculas/crear"
@inject NavigationManager navigationManager
@inject IRepositorio repositorio
@inject SweetAlertService swal
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize(Roles = "admin")]

<h3>Crear Pelicula</h3>
@if (MostrarFormulario)
{
    <FormularioPeliculas Pelicula="Pelicula" OnValidSubmit="crear" GenerosNoSeleccionados="GeneroNoSeleccionados"
                         ActoresSeleccionados="ActoresSeleccionados"></FormularioPeliculas>
}
else
{
    <p>Cargando...</p>
}



@code {
    private BlazorPeliculas Pelicula = new BlazorPeliculas();
    private List<Genero> GeneroNoSeleccionados = new List<Genero>();

    public List<Actores> ActoresSeleccionados = new List<Actores>();
    //Propiedad para mostrar el formulario cuando ya haya cargado los generos
    public bool MostrarFormulario { get; set; } = false;

    protected async override Task OnInitializedAsync()
    {
        var respuestaHTTP = await repositorio.Get<List<Genero>>("api/generos");
        GeneroNoSeleccionados = respuestaHTTP.Response;
        MostrarFormulario = true;
    }



    async void crear()
    {
        //Variable para acceder al controller y realizar su peticion
        var httpResponse = await repositorio.Post<BlazorPeliculas, int>("api/peliculas", Pelicula);

        if (httpResponse.Error)
        {
            var mensajeError = await httpResponse.ObtenerMensajeError();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {
            var peliculaId = httpResponse.Response;
            navigationManager.NavigateTo($"/pelicula/{peliculaId}/{Pelicula.Titulo.Replace(" ", "-")}");
        }
    }
}

